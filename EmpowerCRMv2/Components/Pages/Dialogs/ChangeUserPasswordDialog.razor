@using EmpowerCRMv2.Data
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Identity
@inject IContactService ContactService
@inject IUserService UserService
@attribute [Authorize(Roles = "Administrator")]

<MudDialog>
    <DialogContent>
        <EditForm Model="@Input" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator />
            <MudCard>
                <MudCardContent>
                    <div class="form-floating mb-3">
                        <InputText type="password" @bind-Value="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                        <label for="password">Password</label>
                        <ValidationMessage For="() => Input.Password" class="text-danger" />
                    </div>
                    <div class="form-floating mb-3">
                        <InputText type="password" @bind-Value="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                        <label for="confirm-password">Confirm Password</label>
                        <ValidationMessage For="() => Input.ConfirmPassword" class="text-danger" />
                    </div>
                </MudCardContent>
                <MudCardActions>
                    <MudSpacer />
                    <MudButton OnClick="Cancel" Class="mx-1">Cancel</MudButton>
                    <MudButton Variant="Variant.Filled" ButtonType="ButtonType.Submit"
                               Color="Color.Primary">Save</MudButton>
                </MudCardActions>
            </MudCard>
        </EditForm>
    </DialogContent>
</MudDialog>

@code {
    private InputModel Input { get; set; } = new();
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public ApplicationUser User { get; set; }

    override protected async Task OnParametersSetAsync()
    {

    }

    void Cancel() => MudDialog.Cancel();

    private async void OnValidSubmit(EditContext editContext)
    {
        if(await UserService.ChangeUserPasswordAsync(User.Id, Input.Password))
        {
            MudDialog.Close(DialogResult.Ok(User));
        }
    }

    private sealed class InputModel
    {
        [Required]
        [StringLength(100, ErrorMessage = "The {0} must be at least {2} and at max {1} characters long.", MinimumLength = 6)]
        [DataType(DataType.Password)]
        [Display(Name = "Password")]
        public string Password { get; set; } = "";

        [DataType(DataType.Password)]
        [Display(Name = "Confirm password")]
        [Compare("Password", ErrorMessage = "The password and confirmation password do not match.")]
        public string ConfirmPassword { get; set; } = "";
    }
}
